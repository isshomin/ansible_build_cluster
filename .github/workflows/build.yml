name: Build & Deploy with Ansible Cluster

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      target:
        description: "배포 타깃 선택 (aws, local, all)"
        required: true
        default: "all"

jobs:
  build-ec2:
    runs-on: [self-hosted, ec2-runner]
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: chmod +x gradlew
      - run: ./gradlew clean build -x test
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - run: docker build -t isshomin/build-cluster:ec2-${{ github.sha }} .
      - run: docker push isshomin/build-cluster:ec2-${{ github.sha }}

  build-local:
    runs-on: [self-hosted, local-runner]
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: chmod +x gradlew
      - run: ./gradlew clean build -x test
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - run: docker build -t isshomin/build-cluster:local-${{ github.sha }} .
      - run: docker push isshomin/build-cluster:local-${{ github.sha }}

  promote-latest:
    runs-on: ubuntu-latest
    needs: [build-ec2, build-local]
    if: always()
    steps:
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Promote EC2 build to latest (preferred)
        run: |
          if docker pull isshomin/build-cluster:ec2-${{ github.sha }}; then
            docker tag isshomin/build-cluster:ec2-${{ github.sha }} isshomin/build-cluster:latest
            docker push isshomin/build-cluster:latest
            echo "✅ EC2 build promoted to latest"
            exit 0
          fi
      - name: Fallback to Local build if EC2 failed
        run: |
          if docker pull isshomin/build-cluster:local-${{ github.sha }}; then
            docker tag isshomin/build-cluster:local-${{ github.sha }} isshomin/build-cluster:latest
            docker push isshomin/build-cluster:latest
            echo "⚠️ Fallback: Local build promoted to latest"
          else
            echo "❌ No build available for promotion"
            exit 1
          fi

  deploy:
    runs-on: [self-hosted, controller]
    needs: promote-latest
    steps:
      - name: Run Ansible Playbook (with target selection)
        run: |
          if [ "${{ github.event.inputs.target }}" = "aws" ]; then
            ansible-playbook -i ~/ansible/inventory.ini ~/ansible/deploy.yml -l aws_deploy
          elif [ "${{ github.event.inputs.target }}" = "local" ]; then
            ansible-playbook -i ~/ansible/inventory.ini ~/ansible/deploy.yml -l local_deploy
          else
            ansible-playbook -i ~/ansible/inventory.ini ~/ansible/deploy.yml
          fi
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
